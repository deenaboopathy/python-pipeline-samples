pipeline:
  name: python-sample
  identifier: pythonsample
  projectIdentifier: pythonsample
  orgIdentifier: WiproPOC
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: GH_Connector
        repoName: python-pipeline-samples
        build: <+input>
  stages:
    - stage:
        name: build test and run
        identifier: build_test_and_run
        type: CI
        spec:
          cloneCodebase: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: code compile
                  identifier: code_compile
                  spec:
                    connectorRef: dockerdeepak
                    image: python:3.10.6-alpine
                    shell: Sh
                    command: python -m compileall ./
              - step:
                  type: Run
                  name: CreateDockerfile
                  identifier: CreateDockerfile
                  spec:
                    connectorRef: dockerdeepak
                    image: alpine
                    shell: Sh
                    command: |-
                      touch pythondockerfile
                      cat > pythondockerfile <<- EOM
                      FROM python:3.10.6-alpine
                      WORKDIR /python-sample
                      ADD . /python-sample
                      RUN pip install -r requirements.txt
                      CMD ["python" , "app.py"]
                      EOM
                      cat pythondockerfile
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and Push
                  identifier: Build_and_Push
                  spec:
                    connectorRef: dockerdeepak
                    repo: dockerdeepak/harness-py-sample
                    tags:
                      - latest
                      - v1
                    dockerfile: pythondockerfile
    - stage:
        name: IntegrationTest
        identifier: IntegrationTest
        description: ""
        type: CI
        spec:
          cloneCodebase: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - step:
                  type: Background
                  name: Python Server
                  identifier: Python_Server
                  spec:
                    connectorRef: dockerdeepak
                    image: dockerdeepak/harness-py-sample
                    shell: Sh
                    command: python3 /python-pipeline-samples/app.py
              - step:
                  type: Run
                  name: Test Connection to Server
                  identifier: Test_Connection_to_Server
                  spec:
                    connectorRef: dockerdeepak
                    image: curlimages/curl:7.73.0
                    shell: Sh
                    command: |-
                      sleep 10
                      curl localhost:5000
